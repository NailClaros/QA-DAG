name: Run Pytest

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        options: >-
          --health-cmd="pg_isready -U testuser -d testdb"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    env:
      DB_HOST: postgres
      DB_NAME: testdb
      DB_USER: testuser
      DB_PASS: testpass

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest psycopg2 requests python-dotenv

      - name: Create test table
        run: |
          PGPASSWORD=$DB_PASS psql -h $DB_HOST -U $DB_USER -d $DB_NAME -c "
          CREATE TABLE IF NOT EXISTS sensor_data (
              id serial primary key,
              location text not null,
              sensor_name_units text not null,
              measurement real not null,
              date_inserted date not null,
              constraint uq_daily unique (location, sensor_name_units, date_inserted)
          );"

      - name: Run tests
        run: python -m pytest tests/ -v
