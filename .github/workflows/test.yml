name: Run Pytest

on:
  push:        # run tests on every push
  pull_request: # also run on pull requests

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASS }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432

    env:
      DB_HOST: localhost
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest psycopg2

      - name: Wait for Postgres
        run: |
          sleep 10
          PGPASSWORD=${{ secrets.DB_PASS }} psql -h localhost -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} -c "SELECT 1;"

      - name: Create test table
        run: |
          PGPASSWORD=${{ secrets.DB_PASS }} psql -h localhost -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} <<'EOF'
          CREATE TABLE IF NOT EXISTS sensor_data (
              id serial primary key,
              location text not null,
              sensor_name_units text not null,
              measurement real not null,
              date_inserted date not null,
              constraint uq_daily unique (location, sensor_name_units, date_inserted)
          );
          EOF

      - name: Run tests
        run: python -m pytest tests/ 
